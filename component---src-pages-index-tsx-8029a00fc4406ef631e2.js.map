{"version":3,"file":"component---src-pages-index-tsx-8029a00fc4406ef631e2.js","mappings":"6NAsBA,MAlBcA,IAEVC,EAAAA,EAAAA,IAAAA,KAAAA,CACEC,KAAG,QAAE,CACHC,MAAOC,EAAAA,GAAAA,MACPC,OAAQ,UACRC,QAAS,GACTC,QAAS,SACTC,WAAY,sBACZ,SAAU,CAAEF,QAAS,IACtB,eAEDL,EAAAA,EAAAA,IAAAA,KAAAA,KAAKD,EAAKS,KAAKC,YAAYC,QAC3BV,EAAAA,EAAAA,IAAAA,IAAAA,KAAID,EAAKS,KAAKG,UCXpB,MAiBaC,EAAK,aAmBlB,MApCc,KACZ,MAAMC,GAAOC,EAAAA,EAAAA,IAAeF,GACtBG,GAAiBC,EAAAA,EAAAA,UAAQ,IAAMH,EAAKI,kBAAkBC,OAAO,CAACL,EAAKI,kBAAkBC,QAE3F,OACElB,EAAAA,EAAAA,IAAAA,UAAAA,MACEA,EAAAA,EAAAA,IAACmB,EAAAA,GAAI,CAACC,GAAG,KAAKC,cAAc,SAASC,IAAI,QACtCP,EAAMQ,KAAKxB,IACVC,EAAAA,EAAAA,IAACwB,EAAAA,GAAI,CAACC,GAAI1B,EAAKS,KAAKC,YAAYiB,KAAMC,IAAK5B,EAAKS,KAAKoB,KACnD5B,EAAAA,EAAAA,IAAC6B,GAAI,UAAK9B,EAAI,CAAE4B,IAAK5B,EAAKS,KAAKoB,UAI7B,ECduB,OAAAE,KAAAA,UAAAC,OAAAA,iDAcrC,MAZa,KAET/B,EAAAA,EAAAA,IAAAA,MAAAA,MACEA,EAAAA,EAAAA,IAACgC,EAAAA,GAAM,CAACD,OAAQE,EAAAA,MAChBjC,EAAAA,EAAAA,IAACkC,EAAAA,EAAM,OACPlC,EAAAA,EAAAA,IAAAA,OAAAA,CAAMC,IAAG,IACPD,EAAAA,EAAAA,IAACmC,EAAK,O","sources":["webpack://my-site-name/./src/components/Post.tsx","webpack://my-site-name/./src/components/Posts.tsx","webpack://my-site-name/./src/pages/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { colors } from \"../style\";\nimport { TPost } from \"types\";\n\nconst Post = (post: TPost) => {\n  return (\n    <li\n      css={{\n        color: colors.black,\n        cursor: \"pointer\",\n        opacity: 0.7,\n        padding: \"16px 0\",\n        transition: \"opacity linear 0.1s\",\n        \":hover\": { opacity: 1 },\n      }}\n    >\n      <h1>{post.node.frontmatter.title}</h1>\n      <p>{post.node.excerpt}</p>\n    </li>\n  );\n};\n\nexport default Post;\n","import { graphql, Link, useStaticQuery } from \"gatsby\";\nimport React, { useMemo } from \"react\";\nimport Post from \"./Post\";\nimport { TPost } from \"../types\";\nimport { Flex } from \"../style\";\n\nconst Posts = () => {\n  const data = useStaticQuery(query);\n  const posts: TPost[] = useMemo(() => data.allMarkdownRemark.edges, [data.allMarkdownRemark.edges]);\n\n  return (\n    <section>\n      <Flex as=\"ul\" flexDirection=\"column\" gap=\"40px\">\n        {posts.map((post) => (\n          <Link to={post.node.frontmatter.slug} key={post.node.id}>\n            <Post {...post} key={post.node.id} />\n          </Link>\n        ))}\n      </Flex>\n    </section>\n  );\n};\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            slug\n            title\n            category\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Posts;\n","import React from \"react\";\nimport { Global } from \"@emotion/react\";\nimport { globalStyle } from \"../style\";\nimport Header from \"components/Header\";\nimport Utterances from \"components/Utterances\";\nimport Posts from \"components/Posts\";\n\nconst Home = () => {\n  return (\n    <div>\n      <Global styles={globalStyle} />\n      <Header />\n      <main css={{ maxWidth: \"1200px\", width: \"80%\", margin: \"60px auto 0\" }}>\n        <Posts />\n      </main>\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["post","___EmotionJSX","css","color","colors","cursor","opacity","padding","transition","node","frontmatter","title","excerpt","query","data","useStaticQuery","posts","useMemo","allMarkdownRemark","edges","Flex","as","flexDirection","gap","map","Link","to","slug","key","id","Post","name","styles","Global","globalStyle","Header","Posts"],"sourceRoot":""}