{"version":3,"file":"component---src-pages-markdown-remark-frontmatter-slug-tsx-38946d5e1eb540b019e3.js","mappings":"qLAoBA,MAlBmB,KACjB,MAAMA,GAAYC,EAAAA,EAAAA,QAAuB,MAczC,OAZAC,EAAAA,EAAAA,YAAU,KAAO,IAAD,EACd,MAAMC,EAAWC,SAASC,cAAc,UACxCF,EAASG,OAAQ,EACjBH,EAASI,IAAM,gCACfJ,EAASK,aAAa,OAAQ,mCAC9BL,EAASK,aAAa,aAAc,YACpCL,EAASK,aAAa,QAAS,gBAC/BL,EAASK,aAAa,cAAe,aAEpB,QAAjB,EAAAR,EAAUS,eAAO,OAAjBC,EAAmBC,YAAYR,EAAS,GACvC,KAEIS,EAAAA,EAAAA,IAAAA,MAAAA,CAAKC,IAAKb,GAAa,E,oBCZQ,OAAAc,KAAAA,SAAAC,OAAAA,iDAEzB,SAASC,EAAiB,GAEjC,IAFiC,KACvCC,GACI,EACJ,MAAM,eAAEC,GAAmBD,GACrB,YAAEE,EAAW,KAAEC,GAASF,EAC9B,OACEN,EAAAA,EAAAA,IAAAA,MAAAA,MACEA,EAAAA,EAAAA,IAACS,EAAAA,GAAM,CAACN,OAAQO,EAAAA,MAChBV,EAAAA,EAAAA,IAACW,EAAAA,EAAM,OACPX,EAAAA,EAAAA,IAAAA,OAAAA,CACEY,IAAG,IAMHZ,EAAAA,EAAAA,IAAAA,MAAAA,CAAKa,wBAAyB,CAAEC,OAAQN,OAE1CR,EAAAA,EAAAA,IAACe,EAAU,MAGjB,C","sources":["webpack://my-site-name/./src/components/Utterances.tsx","webpack://my-site-name/./src/pages/{markdownRemark.frontmatter__slug}.tsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\n\nconst Utterances = () => {\n  const commentEl = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const scriptEl = document.createElement(\"script\");\n    scriptEl.async = true;\n    scriptEl.src = \"https://utteranc.es/client.js\";\n    scriptEl.setAttribute(\"repo\", \"HyeBinYang/HyeBinYang.github.io\");\n    scriptEl.setAttribute(\"issue-term\", \"pathname\");\n    scriptEl.setAttribute(\"theme\", \"github-light\");\n    scriptEl.setAttribute(\"crossorigin\", \"anonymous\");\n\n    commentEl.current?.appendChild(scriptEl);\n  }, []);\n\n  return <div ref={commentEl} />;\n};\n\nexport default Utterances;\n","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Utterances from \"components/Utterances\";\nimport Header from \"components/Header\";\nimport { globalStyle } from \"../style\";\nimport { Global } from \"@emotion/react\";\n\nexport default function BlogPostTemplate({\n  data, // this prop will be injected by the GraphQL query below.\n}: any) {\n  const { markdownRemark } = data; // data.markdownRemark holds your post data\n  const { frontmatter, html } = markdownRemark;\n  return (\n    <div>\n      <Global styles={globalStyle} />\n      <Header />\n      <main\n        css={{\n          maxWidth: \"780px\",\n          margin: \"0 auto\",\n          padding: \"0 1.5em\",\n        }}\n      >\n        <div dangerouslySetInnerHTML={{ __html: html }} />\n      </main>\n      <Utterances />\n    </div>\n  );\n}\n\nexport const pageQuery = graphql`\n  query ($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n        category\n      }\n    }\n  }\n`;\n"],"names":["commentEl","useRef","useEffect","scriptEl","document","createElement","async","src","setAttribute","current","_commentEl$current","appendChild","___EmotionJSX","ref","name","styles","BlogPostTemplate","data","markdownRemark","frontmatter","html","Global","globalStyle","Header","css","dangerouslySetInnerHTML","__html","Utterances"],"sourceRoot":""}